#-----------------------------------------------------------------
# TODO Module-CPANTS-Analyse
# $Rev: 409 $
# $Date: 2006-09-14 19:42:31 +0200 (Thu, 14 Sep 2006) $ 
#-----------------------------------------------------------------


#-----------------------------------------------------------------
# BUGS
#-----------------------------------------------------------------

Robert 'phaylon' Sedlacek <phaylon@dunkelheit.at>
  2. Bei einer $VERSION = '0.01_02'; bekomme ich von cpants_lint.pl die           
  Meldung, dass 'has_proper_version' nicht bestanden wird.     

http://rt.cpan.org/Ticket/Display.html?id=21370
  Win32 test fail:  analyse.t, analyse_afs.t, calc.t, testfile.t

#-----------------------------------------------------------------
# New Metrics
#-----------------------------------------------------------------

- no_boilerplate
- has_valid_filenames
- declares_dependencies
- no_open_bugs

- Signature checking ?
- has_rating ?
- relation of subs to lines of code ?

- easily_repackagable
- easily_repackagable_by_debian
- easily_repackagable_by_fedora
  on http://www.perlfoundation.org/perl5/index.cgi?cpan_packaging
  there are guidelines for module authors to make their modules easily
  repackagable by downstream distros.
  It  would be great if we could add as many to CPANTS as possible.
  Some we can check without executing code.
  Others might be verified by the CPAN Testers, reported by the tools
  and then collected from the reports by CPANTS.

- version_number_is_sane
  There are several issues here: 
  1) Is the version number sane for perl (I think there is a metric already)
  2) Is the version number sane for Debian/RedHat (they have different meaning of sane)
  3) Is the scheme of the version numbers stable? (In Debian they don't like when ppl are
     changing from D.DD to a D.D scheme or vice versa.

  1.1.1 is not considered correct by MakeMaker but it is currently accepted by CPANTS
  http://cpants.perl.org/dist/kwalitee/Sys-HostIP
  http://www.nntp.perl.org/group/perl.qa/2007/12/msg10025.html

- has_same_version_number_in_all_files ???

- has_no_indirect_code
  Check the source code (and/or) the documentation if you see 
  new Module::Name anywhere mark the metric as failed.

- declares_minimal_version_of_perl
  It has "use N" somewhere in the Makefile.PL and/or Build.PL and/or the source code.
  (and they match to each other :-)
  (No specific N should be required)

- "something about has good perl code"
  (e.g. if uses 3 param open but does not say use perl 5.6 or similar)


- change has_license to has_license_in_yaml,
  put the actual name of the license (perl, etc.) in the 
  database for later retreival
- has_license_in_source
    Module::License::Report  integration
    (though I am not sure if that should mean the main .pm
        file only or all the files or what)
- licenses_are_consistent

- no_generated_file
  check for the following files and directories and makr the kwalitee as failed
  if any of them exists.
  Build
  Makefile
  _build
  blib
  pm_to_blib

#-----------------------------------------------------------------
# Other Stuff 
#-----------------------------------------------------------------

- include more dists in test (for better test coverage)

- improve NeedsCompiler (see its TODO)

- history of module metrics and authors average.
  (download all the currently available versions of a module from CPAN
  (or even those from backpan), calculate the metric on each one of them
  create nice graphs.

- Add opt-in e-mail notification when the kwalitee of a new releases is
  either < 60% or is worse than the previous value.
  (what to do when more metrics are added?)

- Perl Critic report:
  As this is not really in the consensus probably it is better not add it as 
  a metric now but it might be nice to run it on each module 
  (starting at leevel 5 ) and display it along with the metrics.
  Maybe it can be added as an optional metric.

- Display the real errors as seen by CPANTS.
  e.g. http://cpants.perl.org/dist/overview/STAFService shows a Pod error
  and missing use strict. It would be nice if CPANTS could display the
  error code (in the pod case) or the file(s) that have no use strict.

- One of the modules failing the extractable metric
  http://cpants.perl.org/dist/shortcoming?metric=extractable
  is http://cpants.perl.org/dist/overview/Catalyst-Plugin-Imager
  but it does not seem to be on CPAN at all.
  The same seems to be true to all 8 distros in this category.

- pls display the number of failing distros for each metric
  on the http://cpants.perl.org/kwalitee.html page too

- Add a page to show the results of the Phalanx 100
  http://qa.perl.org/phalanx/



